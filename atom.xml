<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ResistanceTo&#39;s blogs</title>
  
  <subtitle>记录</subtitle>
  <link href="https://resistanceto.github.io/atom.xml" rel="self"/>
  
  <link href="https://resistanceto.github.io/"/>
  <updated>2024-12-04T08:46:26.447Z</updated>
  <id>https://resistanceto.github.io/</id>
  
  <author>
    <name>ResistanceTo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://resistanceto.github.io/2024/12/04/hello-world/"/>
    <id>https://resistanceto.github.io/2024/12/04/hello-world/</id>
    <published>2024-12-04T08:46:26.447Z</published>
    <updated>2024-12-04T08:46:26.447Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>macOS逆向初学者的第一篇文章</title>
    <link href="https://resistanceto.github.io/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://resistanceto.github.io/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2023-12-14T07:14:43.000Z</published>
    <updated>2024-12-04T09:36:53.963Z</updated>
    
    <content type="html"><![CDATA[<p>刚入门 macOS 逆向的一位萌新，借一个简单的应用记录一下成果。</p><p>首先准备个两个软件，ida pro 和 hopper（demo 版即可），用来做静态分析。应该具备一些基本 C 语言知识，我的电脑是 m1，所以文章内展示的都是 ARM 系列的，之前的 intel 版本就选择 X86_64</p><p>今天的目标是 Macs Fan Control 用这个软件来做个例子，因为足够简单。</p><h2 id="1-初步准备"><a href="#1-初步准备" class="headerlink" title="1. 初步准备"></a>1. 初步准备</h2><p>在应用程序里面右键软件包 Macs Fan Control，显示包内容，可以看到这个程序的内部文件，我们的目光注意在 MacOS 这个文件夹内的和软件同名的二进制文件，这个文件就是主程序。我们把他复制一份到其他地方，下载或文档等其他目录里面。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image.png"></p><p>将复制出来的二进制文件拉到 ida 和 hopper 中，选择自己的系统架构。先用 hopper 加载，因为他的字符串搜索功能比较好用（个人观点）。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-1.png"></p><h2 id="2-开始分析"><a href="#2-开始分析" class="headerlink" title="2. 开始分析"></a>2. 开始分析</h2><p>我们打开目标软件看一下关于里面的信息</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-2.png"></p><p>可以看到有一个 Free version 的字样，我们在 hopper 中搜索一下，切换到 Str 这个地方搜索，这个是搜索字符串。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-3.png"></p><p>我们可以看到搜索 Free 的时候，第一个出来的结果是 <code>AboutDialog/staticFreeVersion</code> 对应的就是关于窗体的免费版本，红框的地方我们可以看到还有一个 pro 版本，我们按下 x 跳转过去看看。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-4.png"></p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-5.png"></p><p>伪代码里面我们随便翻看一下，可以看到需要的 Qxxxxx 的字样，应该是一个 Qt 程序哈，伪代码我更倾向于用 ida 查看，这俩软件相互配合使用。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-6.png"></p><p>ida 里面的伪代码我们可以看到，ProVersion 这个块是 LABEL72，这个块里面，第一行是一个判断 <code>if ( !(unsigned int)sub_100028588(QCoreApplication::self) )</code> 我们进到这个函数里面看一下。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-7.png"></p><p>可以看到函数里面有一个 pro-version 到字样，或许是关键点，并且这个函数返回一个 int 类型，结合判断条件 <code>if ( !(unsigned int)sub_100028588(QCoreApplication::self) )</code> 来说，如果返回值是 0，取反条件成立，就执行下面的 <code>goto LABEL_91</code> 我们不让他跳走，让他继续往下走到 ProVersion 这个地方。就把这个函数返回值写死成 1，这样就可以了。</p><h2 id="3-开始修改程序"><a href="#3-开始修改程序" class="headerlink" title="3. 开始修改程序"></a>3. 开始修改程序</h2><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-8.png"></p><p>这是我们改完之后的样子，先到函数第一行，按 tab 切换到汇编界面，然后按下 <kbd>control</kbd>+<kbd>option</kbd>+<kbd>k</kbd>，跳出修改窗口</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-9.png"></p><p>第一行改成 <code>mov x0, #1</code> 第二行改成 <code>ret</code></p><p>然后保存我们的修改</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-10.png"></p><p>看到输出窗口有提示信息 Applied 8&#x2F;8 patch(es) 说明就已经改完了，我们把修改后的文件，也就是最开始复制出来的那个文件，替换软件包 Macs Fan Control 里面的 MacOS 下的同名文件，然后签名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> codesign -f -s - --timestamp=none /Applications/Macs\ Fan\ Control.app</span><br></pre></td></tr></table></figure><p>签名后打开软件在看下。</p><p><img src="/2023/12/14/macOS%E9%80%86%E5%90%91%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/image-11.png"></p><p>可以看到已经成功成为 pro 版了，至此，软件破解完成。</p><p>参考文章： <a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1705732&extra=page=1&filter=typeid&typeid=377">https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=1705732&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D377</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;刚入门 macOS 逆向的一位萌新，借一个简单的应用记录一下成果。&lt;/p&gt;
&lt;p&gt;首先准备个两个软件，ida pro 和 hopper（demo 版即可），用来做静态分析。应该具备一些基本 C 语言知识，我的电脑是 m1，所以文章内展示的都是 ARM 系列的，之前的 int</summary>
      
    
    
    
    
    <category term="macOS逆向" scheme="https://resistanceto.github.io/tags/macOS%E9%80%86%E5%90%91/"/>
    
    <category term="软件破解" scheme="https://resistanceto.github.io/tags/%E8%BD%AF%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>不 commit 仅仅 pull</title>
    <link href="https://resistanceto.github.io/2023/12/13/%E4%B8%8Dcommit%E4%BB%85pull/"/>
    <id>https://resistanceto.github.io/2023/12/13/%E4%B8%8Dcommit%E4%BB%85pull/</id>
    <published>2023-12-13T06:12:44.000Z</published>
    <updated>2024-12-04T08:55:26.581Z</updated>
    
    <content type="html"><![CDATA[<p><strong>工作中可能有一种情况是他人提交了代码，我们需要在此基础上修改，但是有部分自己写的代码未完成，这个时候我们不想提交只想更新一下代码。</strong></p><ul><li>暂存改动（暂存改动的文件，注意：新增的文件不会到暂存区）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure><ul><li>获取远程分支（获取当前分支时，可以只写 git fetch）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><ul><li>合并远程分支（同上）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;remote&gt;</span><br></pre></td></tr></table></figure><ul><li>还原暂存的修改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p><strong>此时即可达到不 commit 直接拉下来代码的效果</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash               <span class="comment"># 暂存当前改动且未commit的文件</span></span><br><span class="line">git fetch &lt;remote&gt;      <span class="comment"># 获取远程分支</span></span><br><span class="line">git merge &lt;remote&gt;      <span class="comment"># 合并远程分支到本地分支</span></span><br><span class="line">git stash pop           <span class="comment"># 还原被暂存的问题</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;工作中可能有一种情况是他人提交了代码，我们需要在此基础上修改，但是有部分自己写的代码未完成，这个时候我们不想提交只想更新一下代码。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;暂存改动（暂存改动的文件，注意：新增的文件不会到暂存区）&lt;/li&gt;
&lt;/ul&gt;
&lt;</summary>
      
    
    
    
    
    <category term="git" scheme="https://resistanceto.github.io/tags/git/"/>
    
  </entry>
  
</feed>
